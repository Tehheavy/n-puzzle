{"version":3,"sources":["logo.svg","components/GameBoardItem.js","components/GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GameBoardItem","props","useState","value","console","log","size","style","height","width","overflow","position","transition","right","j","top","i","borderRadius","onClick","e","id","img","GameBoard","board","setBoard","rerender","setRerender","handleClick","path","swap","isSolvable2","random","count","length","sumInversions2","index1","index2","newPosX","newPosY","oldPosX","oldPosY","newItem1","key","image","img2","newItem2","tempboard","prev","useEffect","temp","tempStyle","margin","draggable","src","push","Math","floor","document","getElementById","addEventListener","removeEventListener","paddingBottom","className","tempArray","sort","oldBoard","newBoard","shuffle","App","forceRerender","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.94a45a10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, Component,useRef, useLayoutEffect } from \"react\";\r\n\r\nfunction GameBoardItem(props) {  \r\n    \r\n  const [value, setValue] = useState(props.value);\r\n  const clickImage=(e)=> {\r\n    console.log('clicked on ',props.value)\r\n\r\n  }\r\n  console.log('props size is',props.size)\r\n  return (\r\n    <div style={{\r\n        height:''+(100/props.size)-0.3+'%',width:''+(100/props.size)-0.3+'%',overflow:'hidden',position:'absolute',transition:\"all 0.2s\",right:''+(100/props.size)*(props.size-1-props.j)+'%',top:''+(100/props.size)*(props.i)+'%',borderRadius:'2px'}}\r\n        onClick={e=>{clickImage(e)}}\r\n        id={props.id}>\r\n        {props.img}\r\n    </div>\r\n  );\r\n}\r\n// style={{\r\n//     height:'33%',width:'33%',overflow:'hidden',position:'absolute',transition:\"right 1s\",right:''+(100/3)*(2-props.j)+'%',top:''+(100/3)*(props.i)+'%',borderRadius:'10px'}}\r\nexport default GameBoardItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GameBoardItem from './GameBoardItem'\r\nimport './button.css'\r\nfunction GameBoard(props) {\r\n\r\n    const [board, setBoard] = useState([]);\r\n    const [position, setPosition] = useState(props.size * props.size - 1)\r\n    const [rerender, setRerender] = useState(props.rerender);\r\n    const [board2, setBoard2] = useState([])\r\n\r\n    const handleClick = (e) => {\r\n        if (e.path[1].id) {\r\n            console.log('CLICKEDD LISTENRE', e.path[1].id)\r\n            swap(e.path[1].id, position)\r\n        }\r\n        console.log('board1', board)\r\n        // let tempboard=board;\r\n        // let img=<img style={{height:'300%',width:'300%',margin:'-'+(100*(0))+'%'+' 0px 0px -'+(100*(0))+'%'}} src={'https://i.imgur.com/YLWsY4G.jpg'}></img>\r\n        // let newItem1=<GameBoardItem id={0} key={0} img={img} value={0} i={2} j={2} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n        // // temp.pop();\r\n        // tempboard[0]=newItem1;\r\n        // setBoard(prev=>tempboard)\r\n        // let temppos=rerender;\r\n        // setRerender(!temppos)\r\n\r\n    }\r\n    const sumInversions2=(random)=>{\r\n        console.log('random is ',random)\r\n        let count=0;\r\n        for(let i=0;i<random.length-1;i++){\r\n          for(let j=i+1;j<random.length;j++){\r\n            if(random[i]>random[j])\r\n            count++;\r\n          }\r\n        }\r\n        return count;\r\n      }\r\n    function isSolvable2(random) {\r\n        return (sumInversions2(random) % 2 == 0)\r\n      }\r\n    const shuffle = () => {\r\n        var tempArray=[];\r\n    do{\r\n      tempArray=[];\r\n      for(let i=0;i<props.size*props.size-1;i++){\r\n        tempArray.push(i);\r\n      }\r\n      tempArray.sort(() => Math.random() - 0.5);\r\n      console.log(tempArray)\r\n      console.log('is solvable2:',isSolvable2(tempArray))\r\n      \r\n    }\r\n    while(!isSolvable2(tempArray))\r\n        console.log(tempArray)\r\n\r\n        var oldBoard=[...board];\r\n        var newBoard=[...board];\r\n        for(let i=0;i<oldBoard.length-1;i++){\r\n            let img = oldBoard[i].props.img;\r\n            let newItem1 = <GameBoardItem id={i} size={props.size} key={i} img={img} value={i} i={oldBoard[tempArray[i]].props.i} j={oldBoard[tempArray[i]].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n            newBoard[i]=newItem1;\r\n            console.log('index=',i,'random is',tempArray[i],'(i,j)=',oldBoard[tempArray[i]].props.i,oldBoard[tempArray[i]].props.j,oldBoard[tempArray[i]])\r\n        }\r\n        console.log('tempBoard is',tempArray)\r\n        console.log('newBoard is',newBoard)\r\n        console.log('oldBoard is',board)\r\n        setBoard(prev => newBoard)\r\n        let temppos = rerender;\r\n        setRerender(!temppos)\r\n    }\r\n    const swap = (index1, index2) => {\r\n\r\n\r\n        // let i=board[index1].props.i;\r\n        // let j=board[index1].props.j;\r\n        // let value=board[index1].props.value;\r\n        // let i2=board[index2].props.i;\r\n        // let j2=board[index2].props.j;\r\n        // let value2=board[index2].props.value;\r\n        // let newItem1=<GameBoardItem id={value} key={value} value={value} i={i} j={j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n        // let newItem2=<GameBoardItem id={value2} key={value2} value={value2} i={i2} j={j2} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n        // let tempboard=board;\r\n        // tempboard[index1]=newItem2;\r\n        // tempboard[index2]=newItem1;\r\n        // setBoard(prev=>tempboard)\r\n        if (index1 != index2) {\r\n            let newPosX = board[index1].props.i;\r\n            let newPosY = board[index1].props.j;\r\n            // console.log('X,Y:', newPosX, ',', newPosY)\r\n            let oldPosX = board[index2].props.i;\r\n            let oldPosY = board[index2].props.j;\r\n            console.log('index1:(', newPosX, newPosY, ') pos:(', oldPosX, oldPosY, ')')\r\n            if (newPosY == (oldPosY - 1) && oldPosX == newPosX) { //clicked above\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem id={index1} size={props.size} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem id={index2} size={props.size} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n\r\n                let tempboard = board;\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n            if (newPosY == (oldPosY + 1) && oldPosX == newPosX) { //clicked below\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem id={index1} size={props.size} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem id={index2} size={props.size} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n\r\n                let tempboard = board;\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n            if (newPosY == (oldPosY) && oldPosX == (newPosX + 1)) { //clicked below\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem id={index1} size={props.size} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem id={index2} size={props.size} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n\r\n                let tempboard = board;\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n            if (newPosY == (oldPosY) && oldPosX == (newPosX - 1)) { //clicked below\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem size={props.size} id={index1} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem size={props.size} id={index2} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n\r\n                let tempboard = board;\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('rereender')\r\n        let temp = [];\r\n        let tempStyle = [];\r\n        let count = 0;\r\n        if (board.length === 0) {\r\n\r\n            for (let i = 0; i < props.size; i++) {\r\n                for (let j = 0; j < props.size; j++) {\r\n                    if ((i != props.size - 1) || (j != props.size - 1)) {\r\n                        console.log('count is', count)\r\n                        console.log('i,j', i, ' ', j)\r\n                        let img = <img style={{ height: '' + 100 * props.size + '%', width: '' + 100 * props.size + '%', margin: '-' + (100 * (i)) + '%' + ' 0px 0px -' + (100 * (j)) + '%' }} draggable={'false'} src={'https://i.imgur.com/YLWsY4G.jpg'}></img>\r\n                        temp.push(<GameBoardItem size={props.size} id={count} img={img} key={count} value={count} i={i} j={j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>)\r\n                        tempStyle.push({ height: '' + Math.floor(100 / props.size) - 1 + '%', width: '' + Math.floor(100 / props.size) - 1 + '%', overflow: 'hidden', position: 'absolute', transition: \"right 1s\", right: '' + (100 / props.size) * (props.size - 1 - j) + '%', top: '' + (100 / props.size) * (i) + '%', borderRadius: '10px' })\r\n                    }\r\n                    else {\r\n                        console.log('else', i, j)\r\n                        temp.push(<GameBoardItem size={props.size} id={count} key={count} value={count} i={i} j={j} image={''}></GameBoardItem>)\r\n                        tempStyle.push({ height: '' + Math.floor(100 / props.size) - 1 + '%', width: '' + Math.floor(100 / props.size) - 1 + '%', overflow: 'hidden', position: 'absolute', transition: \"right 1s\", right: '' + (100 / props.size) * (props.size - 1 - j) + '%', top: '' + (100 / props.size) * (i) + '%', borderRadius: '10px' })\r\n                    }\r\n                    count++;\r\n                }\r\n            }\r\n            setBoard(prev => temp)\r\n            console.log('board is ', temp)\r\n        }\r\n        for (let i = 0; i < props.size * props.size; i++) {\r\n            // console.log(document.getElementById(i),'testtest')\r\n            if (document.getElementById(i)) {\r\n                console.log('exist')\r\n                document.getElementById(i).addEventListener('mousedown', handleClick)\r\n            }\r\n            else {\r\n                console.log('doesnt exist')\r\n            }\r\n        }\r\n        return () => {\r\n            for (let i = 0; i < props.size * props.size; i++) {\r\n                // console.log(document.getElementById(i),'testtest')\r\n                console.log('deleting')\r\n                if (document.getElementById(i)) {\r\n                    // console.log('exist')\r\n                    document.getElementById(i).removeEventListener('mousedown', handleClick)\r\n                }\r\n            }\r\n        };\r\n\r\n    }, [board, position, rerender]);\r\n    return (\r\n        <div style={{ height: '0', width: '40%', paddingBottom: '40%', position: 'relative' }}>\r\n            <div style={{ height: '0', width: '100%', paddingBottom: '100%', position: 'relative' }}>\r\n                {board}\r\n            </div>\r\n            <button className=\"fancyButton\" onClick={e => {shuffle()\r\n                console.log('Shuffle')\r\n            }}>shuffle</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React, { useState, useEffect, Component,useRef, useLayoutEffect } from \"react\";\nimport GameBoard from './components/GameBoard'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {  \n  const [forceRerender,setRerender]=useState(false);\n  const [size,setSize]=useState(3);\n  const [board, setBoard] = useState([<div style={{height:''+800/3+'px',width:''+800/3+'px',overflow:'hidden'}}>\n    <img style={{}} src='https://i.imgur.com/YLWsY4G.jpg'></img>\n  </div>]);\n  const [test,setTest]=useState([{height:''+800/3+'px',width:''+800/3+'px',overflow:'hidden',position:'absolute',right:'0px',transition:\"right 1s\"},{height:''+800/3+'px',width:''+800/3+'px',overflow:'hidden',position:'absolute',right:''+800/3+'px',transition:\"right 1s\"}])\n   const setSomething=(e)=> {\n     console.log('test')\n     let temp=[...test]\n     let tempval=temp[0];\n     temp[0]=temp[1];\n     temp[1]=tempval;\n     setTest(prev=>temp)\n     console.log(temp)\n   }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <div style={{height:'800px',width:'800px',position:'relative'}}>\n          <div style={test[0]} onClick={e=>{setSomething(e)}}>\n            <img style={{}} src='https://i.imgur.com/YLWsY4G.jpg'></img>\n          </div>\n        <div style={test[1]}>\n          <img style={{margin:'0px 0px 0px -100%'}} src='https://i.imgur.com/YLWsY4G.jpg'></img>\n        </div>\n          </div> {/* game container*/}\n          {/* <img style={{height:'50vh'}} src='https://i.imgur.com/YLWsY4G.jpg'></img> */}\n          {/* alex */}\n          <GameBoard rerender={forceRerender} size={size}></GameBoard>\n          {/* <button style={{borderRadius:'5px',backgroundColor:'gray'}} onClick={e=>{setSize(prev=>prev+1)\n          console.log(size)}}>test</button> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}