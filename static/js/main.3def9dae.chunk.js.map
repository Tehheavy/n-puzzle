{"version":3,"sources":["logo.svg","components/GameBoardItem.js","components/GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GameBoardItem","props","useState","value","console","log","size","style","height","width","overflow","position","transition","right","j","top","i","borderRadius","onClick","e","id","img","GameBoard","board","setBoard","rerender","setRerender","shuffled","setShuffled","handleClick","path","swap","convertToXY","number","y","Math","floor","x","isSolvable2","random","count","length","sumInversions2","index1","index2","tempboard","newPosX","newPosY","oldPosX","oldPosY","newItem1","key","image","img2","newItem2","prev","alert","nextLevel","checkSolved","useEffect","temp","tempStyle","margin","draggable","src","push","document","getElementById","addEventListener","removeEventListener","paddingBottom","className","tempArray","sort","oldBoard","newBoard","shuffle","App","forceRerender","setSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3def9dae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, Component,useRef, useLayoutEffect } from \"react\";\r\n\r\nfunction GameBoardItem(props) {  \r\n    \r\n  const [value, setValue] = useState(props.value);\r\n  const clickImage=(e)=> {\r\n    console.log('clicked on ',props.value)\r\n\r\n  }\r\n  console.log('props size is',props.size)\r\n  return (\r\n    <div style={{\r\n        height:''+(100/props.size)-0.3+'%',width:''+(100/props.size)-0.3+'%',overflow:'hidden',position:'absolute',transition:\"all 0.2s\",right:''+(100/props.size)*(props.size-1-props.j)+'%',top:''+(100/props.size)*(props.i)+'%',borderRadius:'2px'}}\r\n        onClick={e=>{clickImage(e)}}\r\n        id={props.id}>\r\n        {props.img}\r\n    </div>\r\n  );\r\n}\r\n// style={{\r\n//     height:'33%',width:'33%',overflow:'hidden',position:'absolute',transition:\"right 1s\",right:''+(100/3)*(2-props.j)+'%',top:''+(100/3)*(props.i)+'%',borderRadius:'10px'}}\r\nexport default GameBoardItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GameBoardItem from './GameBoardItem'\r\nimport './button.css'\r\nfunction GameBoard(props) {\r\n\r\n    const [board, setBoard] = useState([]);\r\n    const [position, setPosition] = useState(props.size * props.size - 1)\r\n    const [rerender, setRerender] = useState(props.rerender);\r\n    const [board2, setBoard2] = useState([])\r\n    const [shuffled, setShuffled]= useState(false);\r\n\r\n    const handleClick = (e) => {\r\n        if (e.path[1].id) {\r\n            console.log('CLICKEDD LISTENRE', e.path[1].id)\r\n            swap(e.path[1].id, position)\r\n        }\r\n        console.log('board1', board)\r\n        // let tempboard=board;\r\n        // let img=<img style={{height:'300%',width:'300%',margin:'-'+(100*(0))+'%'+' 0px 0px -'+(100*(0))+'%'}} src={'https://i.imgur.com/YLWsY4G.jpg'}></img>\r\n        // let newItem1=<GameBoardItem id={0} key={0} img={img} value={0} i={2} j={2} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n        // // temp.pop();\r\n        // tempboard[0]=newItem1;\r\n        // setBoard(prev=>tempboard)\r\n        // let temppos=rerender;\r\n        // setRerender(!temppos)\r\n\r\n    }\r\n    const convertToXY=(number)=>{\r\n        let y=Math.floor(number%props.size);\r\n        let x=Math.floor(number/props.size)\r\n        console.log('x,y',x,y);\r\n        let res=[x,y]\r\n        return res;\r\n    }\r\n    const sumInversions2=(random)=>{\r\n        console.log('random is ',random)\r\n        let count=0;\r\n        for(let i=0;i<random.length-1;i++){\r\n          for(let j=i+1;j<random.length;j++){\r\n            if(random[i]>random[j])\r\n            count++;\r\n          }\r\n        }\r\n        return count;\r\n      }\r\n    function isSolvable2(random) {\r\n        return (sumInversions2(random) % 2 == 0)\r\n      }\r\n    const shuffle = () => {\r\n        var tempArray=[];\r\n    do{\r\n      tempArray=[];\r\n      for(let i=0;i<props.size*props.size-1;i++){\r\n        tempArray.push(i);\r\n      }\r\n      tempArray.sort(() => Math.random() - 0.5);\r\n      console.log(tempArray)\r\n      console.log('is solvable2:',isSolvable2(tempArray))\r\n      \r\n    }\r\n    while(!isSolvable2(tempArray))\r\n        console.log(tempArray)\r\n        for(let i=0;i<tempArray.length;i++){\r\n            console.log(tempArray[i]);\r\n            convertToXY(tempArray[i]);\r\n            console.log('test',convertToXY(i)[0])\r\n        }\r\n        var oldBoard=[...board];\r\n        var newBoard=[...board];\r\n        for(let i=0;i<oldBoard.length-1;i++){\r\n            let img = oldBoard[i].props.img;\r\n            let newItem1 = <GameBoardItem id={i} size={props.size} key={i} img={img} value={i} i={convertToXY(tempArray[i])[0]} j={convertToXY(tempArray[i])[1]} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n            newBoard[i]=newItem1;\r\n            console.log('index=',i,'random is',tempArray[i],'(i,j)=',oldBoard[tempArray[i]].props.i,oldBoard[tempArray[i]].props.j,oldBoard[tempArray[i]])\r\n        }\r\n        let img = oldBoard[oldBoard.length-1].props.img;\r\n        let newItem1 = <GameBoardItem id={props.size*props.size-1} size={props.size} key={props.size*props.size-1} img={img} value={(props.size*props.size-1)} i={props.size-1} j={props.size-1} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n        newBoard[props.size*props.size-1]=newItem1;\r\n        console.log('tempBoard is',tempArray)\r\n        console.log('newBoard is',newBoard)\r\n        console.log('oldBoard is',board)\r\n        setBoard(prev => newBoard)\r\n        let temppos = rerender;\r\n        setRerender(!temppos)\r\n        setShuffled(prev=>true)\r\n    }\r\n    const checkSolved = () => {\r\n        \r\n        let count=0;\r\n        for(let i=0;i<props.size;i++){\r\n            for(let j=0;j<props.size;j++){\r\n                console.log(count,i,j)\r\n                if(board[count].props.i==i&&board[count].props.j==j){\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        if(count===board.length&&shuffled===true){\r\n            console.log('win')\r\n            setShuffled(prev=>false);\r\n            alert('level '+(props.size-2)+' complete!')\r\n            props.nextLevel();\r\n        }\r\n        console.log('count is ',count)\r\n    }\r\n    const swap = (index1, index2) => {\r\n\r\n        let tempboard = board;\r\n        // let i=board[index1].props.i;\r\n        // let j=board[index1].props.j;\r\n        // let value=board[index1].props.value;\r\n        // let i2=board[index2].props.i;\r\n        // let j2=board[index2].props.j;\r\n        // let value2=board[index2].props.value;\r\n        // let newItem1=<GameBoardItem id={value} key={value} value={value} i={i} j={j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n        // let newItem2=<GameBoardItem id={value2} key={value2} value={value2} i={i2} j={j2} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n        // let tempboard=board;\r\n        // tempboard[index1]=newItem2;\r\n        // tempboard[index2]=newItem1;\r\n        // setBoard(prev=>tempboard)\r\n        if (index1 != index2) {\r\n            let newPosX = board[index1].props.i;\r\n            let newPosY = board[index1].props.j;\r\n            // console.log('X,Y:', newPosX, ',', newPosY)\r\n            let oldPosX = board[index2].props.i;\r\n            let oldPosY = board[index2].props.j;\r\n            console.log('index1:(', newPosX, newPosY, ') pos:(', oldPosX, oldPosY, ')')\r\n            if (newPosY == (oldPosY - 1) && oldPosX == newPosX) { //clicked above\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem id={index1} size={props.size} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem id={index2} size={props.size} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n            if (newPosY == (oldPosY + 1) && oldPosX == newPosX) { //clicked below\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem id={index1} size={props.size} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem id={index2} size={props.size} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n            if (newPosY == (oldPosY) && oldPosX == (newPosX + 1)) { //clicked below\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem id={index1} size={props.size} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem id={index2} size={props.size} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n            if (newPosY == (oldPosY) && oldPosX == (newPosX - 1)) { //clicked below\r\n\r\n                let img = board[index1].props.img;\r\n                console.log('img is', img)\r\n                let newItem1 = <GameBoardItem size={props.size} id={index1} key={index1} img={img} value={index1} i={board[index2].props.i} j={board[index2].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                let img2 = board[index2].props.img;\r\n                let newItem2 = <GameBoardItem size={props.size} id={index2} key={index2} img={img2} value={index2} i={board[index1].props.i} j={board[index1].props.j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>\r\n                // tempboard.pop();\r\n                tempboard[index1] = newItem1;\r\n                tempboard[index2] = newItem2;\r\n                setBoard(prev => tempboard)\r\n                let temppos = rerender;\r\n                setRerender(!temppos)\r\n            }\r\n        }\r\n        checkSolved(tempboard);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('rereender')\r\n        let temp = [];\r\n        let tempStyle = [];\r\n        let count = 0;\r\n        if (board.length === 0) {\r\n\r\n            for (let i = 0; i < props.size; i++) {\r\n                for (let j = 0; j < props.size; j++) {\r\n                    if ((i != props.size - 1) || (j != props.size - 1)) {\r\n                        console.log('count is', count)\r\n                        console.log('i,j', i, ' ', j)\r\n                        let img = <img style={{ height: '' + 100 * props.size + '%', width: '' + 100 * props.size + '%', margin: '-' + (100 * (i)) + '%' + ' 0px 0px -' + (100 * (j)) + '%' }} draggable={'false'} src={'https://i.imgur.com/YLWsY4G.jpg'}></img>\r\n                        temp.push(<GameBoardItem size={props.size} id={count} img={img} key={count} value={count} i={i} j={j} image={'https://i.imgur.com/YLWsY4G.jpg'}></GameBoardItem>)\r\n                        tempStyle.push({ height: '' + Math.floor(100 / props.size) - 1 + '%', width: '' + Math.floor(100 / props.size) - 1 + '%', overflow: 'hidden', position: 'absolute', transition: \"right 1s\", right: '' + (100 / props.size) * (props.size - 1 - j) + '%', top: '' + (100 / props.size) * (i) + '%', borderRadius: '10px' })\r\n                    }\r\n                    else {\r\n                        console.log('else', i, j)\r\n                        temp.push(<GameBoardItem size={props.size} id={count} key={count} value={count} i={i} j={j} image={''}></GameBoardItem>)\r\n                        tempStyle.push({ height: '' + Math.floor(100 / props.size) - 1 + '%', width: '' + Math.floor(100 / props.size) - 1 + '%', overflow: 'hidden', position: 'absolute', transition: \"right 1s\", right: '' + (100 / props.size) * (props.size - 1 - j) + '%', top: '' + (100 / props.size) * (i) + '%', borderRadius: '10px' })\r\n                    }\r\n                    count++;\r\n                }\r\n            }\r\n            setBoard(prev => temp)\r\n            console.log('board is ', temp)\r\n        }\r\n        for (let i = 0; i < props.size * props.size; i++) {\r\n            // console.log(document.getElementById(i),'testtest')\r\n            if (document.getElementById(i)) {\r\n                console.log('exist')\r\n                document.getElementById(i).addEventListener('mousedown', handleClick)\r\n            }\r\n            else {\r\n                console.log('doesnt exist')\r\n            }\r\n        }\r\n        return () => {\r\n            for (let i = 0; i < props.size * props.size; i++) {\r\n                // console.log(document.getElementById(i),'testtest')\r\n                console.log('deleting')\r\n                if (document.getElementById(i)) {\r\n                    // console.log('exist')\r\n                    document.getElementById(i).removeEventListener('mousedown', handleClick)\r\n                }\r\n            }\r\n        };\r\n\r\n    }, [board, position, rerender]);\r\n    return (\r\n        <div style={{ height: '0', width: '40%', paddingBottom: '40%', position: 'relative' }}>\r\n            <div>\r\n               level {props.size-2}\r\n            </div>\r\n            <div style={{ height: '0', width: '100%', paddingBottom: '100%', position: 'relative' }}>\r\n                {board}\r\n            </div>\r\n            <button className=\"fancyButton\" onClick={e => {shuffle()\r\n                console.log('Shuffle')\r\n            }}>{shuffled?'reshuffle':'start'}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React, { useState, useEffect, Component,useRef, useLayoutEffect } from \"react\";\nimport GameBoard from './components/GameBoard'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {  \n  const [forceRerender,setRerender]=useState(false);\n  const [size,setSize]=useState(3);\n  const [board, setBoard] = useState([<div style={{height:''+800/3+'px',width:''+800/3+'px',overflow:'hidden'}}>\n    <img style={{}} src='https://i.imgur.com/YLWsY4G.jpg'></img>\n  </div>]);\n  const [test,setTest]=useState([{height:''+800/3+'px',width:''+800/3+'px',overflow:'hidden',position:'absolute',right:'0px',transition:\"right 1s\"},{height:''+800/3+'px',width:''+800/3+'px',overflow:'hidden',position:'absolute',right:''+800/3+'px',transition:\"right 1s\"}])\n   const setSomething=(e)=> {\n     console.log('test')\n     let temp=[...test]\n     let tempval=temp[0];\n     temp[0]=temp[1];\n     temp[1]=tempval;\n     setTest(prev=>temp)\n     console.log(temp)\n   }\n   const nextLevel=()=>{\n     setSize(prev=>prev+1)\n\n   }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <div style={{height:'800px',width:'800px',position:'relative'}}>\n          <div style={test[0]} onClick={e=>{setSomething(e)}}>\n            <img style={{}} src='https://i.imgur.com/YLWsY4G.jpg'></img>\n          </div>\n        <div style={test[1]}>\n          <img style={{margin:'0px 0px 0px -100%'}} src='https://i.imgur.com/YLWsY4G.jpg'></img>\n        </div>\n          </div> {/* game container*/}\n          {/* <img style={{height:'50vh'}} src='https://i.imgur.com/YLWsY4G.jpg'></img> */}\n          {/* alex */}\n          <GameBoard nextLevel={nextLevel} key={size} rerender={forceRerender} size={size}></GameBoard>\n          {/* <button style={{borderRadius:'5px',backgroundColor:'gray'}} onClick={e=>{setSize(prev=>prev+1)\n          console.log(size)}}>test</button> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}